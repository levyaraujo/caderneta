version: 0.2

phases:
  install:
    runtime-versions:
      python: 3.12
    commands:
      - echo "Instalando Docker..."
      # Instalar Docker usando o script oficial
      - apt-get update
      - apt-get install -y ca-certificates curl gnupg
      - install -m 0755 -d /etc/apt/keyrings
      - curl -fsSL https://download.docker.com/linux/ubuntu/gpg | gpg --dearmor -o /etc/apt/keyrings/docker.gpg
      - chmod a+r /etc/apt/keyrings/docker.gpg
      - echo "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu $(. /etc/os-release && echo $VERSION_CODENAME) stable" | tee /etc/apt/sources.list.d/docker.list > /dev/null
      - apt-get update
      - apt-get install -y docker-ce docker-ce-cli containerd.io docker-compose-plugin
      - docker --version

  pre_build:
    commands:
      - echo "Configurando Docker..."
      # Iniciar Docker daemon
      - nohup dockerd &
      - sleep 5
      - docker info

  build:
    commands:
      - echo "Iniciando build..."
      - docker compose build

  post_build:
    commands:
      - echo "Iniciando deploy para Lightsail..."
      - mkdir -p ~/.ssh

      # Criar e verificar chave SSH
      - echo "${LIGHTSAIL_SSH_PRIVATE_KEY}"  > ~/.ssh/id_ed25519
      - chmod 600 ~/.ssh/id_ed25519
      - echo "Conte√∫do da chave (primeiros caracteres):"
      - head -n 1 ~/.ssh/id_ed25519

      # Deploy
      - scp -i ~/.ssh/id_ed25519 -o StrictHostKeyChecking=no docker-compose.yml ${LIGHTSAIL_USERNAME}@${LIGHTSAIL_HOST}:~/caderneta/
      - scp -i ~/.ssh/id_ed25519 -o StrictHostKeyChecking=no Dockerfile ${LIGHTSAIL_USERNAME}@${LIGHTSAIL_HOST}:~/caderneta/
      - |
        ssh -i ~/.ssh/id_ed25519 -o StrictHostKeyChecking=no ${LIGHTSAIL_USERNAME}@${LIGHTSAIL_HOST} << 'EOF'
          cd ~/caderneta
          docker compose down
          docker compose pull
          docker compose up -d
          docker image prune -f
        EOF

      # Limpeza
      - rm -rf ~/.ssh

artifacts:
  files:
    - docker-compose.yml
    - Dockerfile
    - '**/*'
